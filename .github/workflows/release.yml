name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: |
          pip install pipx
          pipx install poetry
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        run: poetry install

      - name: Build Project
        run: poetry build

      - name: Install PyInstaller
        run: |
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          poetry run pyinstaller --add-data "sumeyyes_amazing_word_game/data/words.db:data" --add-data "sumeyyes_amazing_word_game/data/players.db:data" sumeyyes_amazing_word_game/__main__.py
        shell: bash

      - name: Make A Zip File That Covers Executable
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            powershell Compress-Archive -Path dist/* -DestinationPath dist/game-${{ runner.os }}.zip
          else
            zip -r dist/game-${{ runner.os }}.zip dist/*
          fi
        shell: bash

      - name: Upload ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: game-zip-${{ matrix.os }}-${{ github.run_id }}
          path: dist/game-${{ runner.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download ZIP Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist_release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release ZIPs
        uses: softprops/action-gh-release@v2
        with:
          files: dist_release/**/game-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
